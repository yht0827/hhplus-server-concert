version: '3'
services:
  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=application
      - MYSQL_PASSWORD=application
      - MYSQL_DATABASE=hhplus
    volumes:
      - ./data/mysql/:/var/lib/mysql

  redis1:
    image: redis:latest
    container_name: redis1
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    restart: always
    volumes:
      - ./redis1/data:/data
    networks:
      - app-network

  redis2:
    image: redis:latest
    container_name: redis2
    ports:
      - "6380:6379"
    command: ["redis-server", "--appendonly", "yes"]
    restart: always
    volumes:
      - ./redis2/data:/data
    networks:
      - app-network

  # Zookeeper 설정 (Kafka 의존성)
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - app-network

  # Kafka 브로커 설정
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    depends_on:
      - zookeeper
    networks:
      - app-network

networks:
  app-network:
    driver: bridge